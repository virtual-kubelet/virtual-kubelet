package scopes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/vmware/vic/lib/apiservers/portlayer/models"
)

// UnbindContainerReader is a Reader for the UnbindContainer structure.
type UnbindContainerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UnbindContainerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUnbindContainerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewUnbindContainerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewUnbindContainerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUnbindContainerOK creates a UnbindContainerOK with default headers values
func NewUnbindContainerOK() *UnbindContainerOK {
	return &UnbindContainerOK{}
}

/*UnbindContainerOK handles this case with default header values.

OK
*/
type UnbindContainerOK struct {
	Payload *models.UnbindContainerResponse
}

func (o *UnbindContainerOK) Error() string {
	return fmt.Sprintf("[DELETE /scopes/containers/{handle}/binding][%d] unbindContainerOK  %+v", 200, o.Payload)
}

func (o *UnbindContainerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UnbindContainerResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUnbindContainerNotFound creates a UnbindContainerNotFound with default headers values
func NewUnbindContainerNotFound() *UnbindContainerNotFound {
	return &UnbindContainerNotFound{}
}

/*UnbindContainerNotFound handles this case with default header values.

Not found
*/
type UnbindContainerNotFound struct {
	Payload *models.Error
}

func (o *UnbindContainerNotFound) Error() string {
	return fmt.Sprintf("[DELETE /scopes/containers/{handle}/binding][%d] unbindContainerNotFound  %+v", 404, o.Payload)
}

func (o *UnbindContainerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUnbindContainerInternalServerError creates a UnbindContainerInternalServerError with default headers values
func NewUnbindContainerInternalServerError() *UnbindContainerInternalServerError {
	return &UnbindContainerInternalServerError{}
}

/*UnbindContainerInternalServerError handles this case with default header values.

error
*/
type UnbindContainerInternalServerError struct {
	Payload *models.Error
}

func (o *UnbindContainerInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /scopes/containers/{handle}/binding][%d] unbindContainerInternalServerError  %+v", 500, o.Payload)
}

func (o *UnbindContainerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
