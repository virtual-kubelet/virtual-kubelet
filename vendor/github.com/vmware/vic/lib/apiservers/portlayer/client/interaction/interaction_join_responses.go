package interaction

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/vmware/vic/lib/apiservers/portlayer/models"
)

// InteractionJoinReader is a Reader for the InteractionJoin structure.
type InteractionJoinReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InteractionJoinReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewInteractionJoinOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewInteractionJoinNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewInteractionJoinInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewInteractionJoinOK creates a InteractionJoinOK with default headers values
func NewInteractionJoinOK() *InteractionJoinOK {
	return &InteractionJoinOK{}
}

/*InteractionJoinOK handles this case with default header values.

OK
*/
type InteractionJoinOK struct {
	Payload *models.InteractionJoinResponse
}

func (o *InteractionJoinOK) Error() string {
	return fmt.Sprintf("[POST /interaction][%d] interactionJoinOK  %+v", 200, o.Payload)
}

func (o *InteractionJoinOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InteractionJoinResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInteractionJoinNotFound creates a InteractionJoinNotFound with default headers values
func NewInteractionJoinNotFound() *InteractionJoinNotFound {
	return &InteractionJoinNotFound{}
}

/*InteractionJoinNotFound handles this case with default header values.

VirtualDevice not found
*/
type InteractionJoinNotFound struct {
	Payload *models.Error
}

func (o *InteractionJoinNotFound) Error() string {
	return fmt.Sprintf("[POST /interaction][%d] interactionJoinNotFound  %+v", 404, o.Payload)
}

func (o *InteractionJoinNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInteractionJoinInternalServerError creates a InteractionJoinInternalServerError with default headers values
func NewInteractionJoinInternalServerError() *InteractionJoinInternalServerError {
	return &InteractionJoinInternalServerError{}
}

/*InteractionJoinInternalServerError handles this case with default header values.

Adding a VirtualDevice failed
*/
type InteractionJoinInternalServerError struct {
	Payload *models.Error
}

func (o *InteractionJoinInternalServerError) Error() string {
	return fmt.Sprintf("[POST /interaction][%d] interactionJoinInternalServerError  %+v", 500, o.Payload)
}

func (o *InteractionJoinInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
