package kv

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/vmware/vic/lib/apiservers/portlayer/models"
)

// GetValueReader is a Reader for the GetValue structure.
type GetValueReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetValueReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetValueOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetValueNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetValueInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetValueOK creates a GetValueOK with default headers values
func NewGetValueOK() *GetValueOK {
	return &GetValueOK{}
}

/*GetValueOK handles this case with default header values.

OK
*/
type GetValueOK struct {
	Payload *models.KeyValue
}

func (o *GetValueOK) Error() string {
	return fmt.Sprintf("[GET /kv/{key}][%d] getValueOK  %+v", 200, o.Payload)
}

func (o *GetValueOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KeyValue)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetValueNotFound creates a GetValueNotFound with default headers values
func NewGetValueNotFound() *GetValueNotFound {
	return &GetValueNotFound{}
}

/*GetValueNotFound handles this case with default header values.

Not found
*/
type GetValueNotFound struct {
}

func (o *GetValueNotFound) Error() string {
	return fmt.Sprintf("[GET /kv/{key}][%d] getValueNotFound ", 404)
}

func (o *GetValueNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetValueInternalServerError creates a GetValueInternalServerError with default headers values
func NewGetValueInternalServerError() *GetValueInternalServerError {
	return &GetValueInternalServerError{}
}

/*GetValueInternalServerError handles this case with default header values.

error
*/
type GetValueInternalServerError struct {
	Payload *models.Error
}

func (o *GetValueInternalServerError) Error() string {
	return fmt.Sprintf("[GET /kv/{key}][%d] getValueInternalServerError  %+v", 500, o.Payload)
}

func (o *GetValueInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
