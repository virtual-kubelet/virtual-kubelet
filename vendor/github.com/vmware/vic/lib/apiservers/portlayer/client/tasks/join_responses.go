package tasks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/vmware/vic/lib/apiservers/portlayer/models"
)

// JoinReader is a Reader for the Join structure.
type JoinReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *JoinReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewJoinOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewJoinNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewJoinInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewJoinOK creates a JoinOK with default headers values
func NewJoinOK() *JoinOK {
	return &JoinOK{}
}

/*JoinOK handles this case with default header values.

OK
*/
type JoinOK struct {
	Payload *models.TaskJoinResponse
}

func (o *JoinOK) Error() string {
	return fmt.Sprintf("[POST /tasks][%d] joinOK  %+v", 200, o.Payload)
}

func (o *JoinOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TaskJoinResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewJoinNotFound creates a JoinNotFound with default headers values
func NewJoinNotFound() *JoinNotFound {
	return &JoinNotFound{}
}

/*JoinNotFound handles this case with default header values.

not found
*/
type JoinNotFound struct {
	Payload *models.Error
}

func (o *JoinNotFound) Error() string {
	return fmt.Sprintf("[POST /tasks][%d] joinNotFound  %+v", 404, o.Payload)
}

func (o *JoinNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewJoinInternalServerError creates a JoinInternalServerError with default headers values
func NewJoinInternalServerError() *JoinInternalServerError {
	return &JoinInternalServerError{}
}

/*JoinInternalServerError handles this case with default header values.

Join of task failed
*/
type JoinInternalServerError struct {
	Payload *models.Error
}

func (o *JoinInternalServerError) Error() string {
	return fmt.Sprintf("[POST /tasks][%d] joinInternalServerError  %+v", 500, o.Payload)
}

func (o *JoinInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
