package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/vmware/vic/lib/apiservers/portlayer/models"
)

// DeleteImageReader is a Reader for the DeleteImage structure.
type DeleteImageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteImageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteImageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewDeleteImageNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 423:
		result := NewDeleteImageLocked()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewDeleteImageDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteImageOK creates a DeleteImageOK with default headers values
func NewDeleteImageOK() *DeleteImageOK {
	return &DeleteImageOK{}
}

/*DeleteImageOK handles this case with default header values.

OK
*/
type DeleteImageOK struct {
	Payload []*models.Image
}

func (o *DeleteImageOK) Error() string {
	return fmt.Sprintf("[DELETE /storage/{store_name}/info/{id}][%d] deleteImageOK  %+v", 200, o.Payload)
}

func (o *DeleteImageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteImageNotFound creates a DeleteImageNotFound with default headers values
func NewDeleteImageNotFound() *DeleteImageNotFound {
	return &DeleteImageNotFound{}
}

/*DeleteImageNotFound handles this case with default header values.

Not found
*/
type DeleteImageNotFound struct {
	Payload *models.Error
}

func (o *DeleteImageNotFound) Error() string {
	return fmt.Sprintf("[DELETE /storage/{store_name}/info/{id}][%d] deleteImageNotFound  %+v", 404, o.Payload)
}

func (o *DeleteImageNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteImageLocked creates a DeleteImageLocked with default headers values
func NewDeleteImageLocked() *DeleteImageLocked {
	return &DeleteImageLocked{}
}

/*DeleteImageLocked handles this case with default header values.

In use
*/
type DeleteImageLocked struct {
	Payload *models.Error
}

func (o *DeleteImageLocked) Error() string {
	return fmt.Sprintf("[DELETE /storage/{store_name}/info/{id}][%d] deleteImageLocked  %+v", 423, o.Payload)
}

func (o *DeleteImageLocked) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteImageDefault creates a DeleteImageDefault with default headers values
func NewDeleteImageDefault(code int) *DeleteImageDefault {
	return &DeleteImageDefault{
		_statusCode: code,
	}
}

/*DeleteImageDefault handles this case with default header values.

error
*/
type DeleteImageDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the delete image default response
func (o *DeleteImageDefault) Code() int {
	return o._statusCode
}

func (o *DeleteImageDefault) Error() string {
	return fmt.Sprintf("[DELETE /storage/{store_name}/info/{id}][%d] DeleteImage default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteImageDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
