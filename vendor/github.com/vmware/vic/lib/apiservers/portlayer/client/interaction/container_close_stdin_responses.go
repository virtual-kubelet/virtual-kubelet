package interaction

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/vmware/vic/lib/apiservers/portlayer/models"
)

// ContainerCloseStdinReader is a Reader for the ContainerCloseStdin structure.
type ContainerCloseStdinReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ContainerCloseStdinReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewContainerCloseStdinOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewContainerCloseStdinNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewContainerCloseStdinInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewContainerCloseStdinOK creates a ContainerCloseStdinOK with default headers values
func NewContainerCloseStdinOK() *ContainerCloseStdinOK {
	return &ContainerCloseStdinOK{}
}

/*ContainerCloseStdinOK handles this case with default header values.

OK
*/
type ContainerCloseStdinOK struct {
}

func (o *ContainerCloseStdinOK) Error() string {
	return fmt.Sprintf("[DELETE /interaction/{id}/stdin][%d] containerCloseStdinOK ", 200)
}

func (o *ContainerCloseStdinOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewContainerCloseStdinNotFound creates a ContainerCloseStdinNotFound with default headers values
func NewContainerCloseStdinNotFound() *ContainerCloseStdinNotFound {
	return &ContainerCloseStdinNotFound{}
}

/*ContainerCloseStdinNotFound handles this case with default header values.

Container not found
*/
type ContainerCloseStdinNotFound struct {
	Payload *models.Error
}

func (o *ContainerCloseStdinNotFound) Error() string {
	return fmt.Sprintf("[DELETE /interaction/{id}/stdin][%d] containerCloseStdinNotFound  %+v", 404, o.Payload)
}

func (o *ContainerCloseStdinNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewContainerCloseStdinInternalServerError creates a ContainerCloseStdinInternalServerError with default headers values
func NewContainerCloseStdinInternalServerError() *ContainerCloseStdinInternalServerError {
	return &ContainerCloseStdinInternalServerError{}
}

/*ContainerCloseStdinInternalServerError handles this case with default header values.

Failed to Close stdin
*/
type ContainerCloseStdinInternalServerError struct {
	Payload *models.Error
}

func (o *ContainerCloseStdinInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /interaction/{id}/stdin][%d] containerCloseStdinInternalServerError  %+v", 500, o.Payload)
}

func (o *ContainerCloseStdinInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
