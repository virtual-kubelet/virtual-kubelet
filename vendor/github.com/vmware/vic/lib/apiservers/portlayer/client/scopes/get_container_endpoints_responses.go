package scopes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/vmware/vic/lib/apiservers/portlayer/models"
)

// GetContainerEndpointsReader is a Reader for the GetContainerEndpoints structure.
type GetContainerEndpointsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetContainerEndpointsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetContainerEndpointsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetContainerEndpointsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetContainerEndpointsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetContainerEndpointsOK creates a GetContainerEndpointsOK with default headers values
func NewGetContainerEndpointsOK() *GetContainerEndpointsOK {
	return &GetContainerEndpointsOK{}
}

/*GetContainerEndpointsOK handles this case with default header values.

OK
*/
type GetContainerEndpointsOK struct {
	Payload []*models.EndpointConfig
}

func (o *GetContainerEndpointsOK) Error() string {
	return fmt.Sprintf("[GET /scopes/containers/{handleOrId}][%d] getContainerEndpointsOK  %+v", 200, o.Payload)
}

func (o *GetContainerEndpointsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContainerEndpointsNotFound creates a GetContainerEndpointsNotFound with default headers values
func NewGetContainerEndpointsNotFound() *GetContainerEndpointsNotFound {
	return &GetContainerEndpointsNotFound{}
}

/*GetContainerEndpointsNotFound handles this case with default header values.

Not found
*/
type GetContainerEndpointsNotFound struct {
	Payload *models.Error
}

func (o *GetContainerEndpointsNotFound) Error() string {
	return fmt.Sprintf("[GET /scopes/containers/{handleOrId}][%d] getContainerEndpointsNotFound  %+v", 404, o.Payload)
}

func (o *GetContainerEndpointsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContainerEndpointsInternalServerError creates a GetContainerEndpointsInternalServerError with default headers values
func NewGetContainerEndpointsInternalServerError() *GetContainerEndpointsInternalServerError {
	return &GetContainerEndpointsInternalServerError{}
}

/*GetContainerEndpointsInternalServerError handles this case with default header values.

error
*/
type GetContainerEndpointsInternalServerError struct {
	Payload *models.Error
}

func (o *GetContainerEndpointsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /scopes/containers/{handleOrId}][%d] getContainerEndpointsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetContainerEndpointsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
