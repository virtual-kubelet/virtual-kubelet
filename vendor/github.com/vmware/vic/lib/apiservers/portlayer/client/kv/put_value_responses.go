package kv

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/vmware/vic/lib/apiservers/portlayer/models"
)

// PutValueReader is a Reader for the PutValue structure.
type PutValueReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutValueReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutValueOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 500:
		result := NewPutValueInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutValueOK creates a PutValueOK with default headers values
func NewPutValueOK() *PutValueOK {
	return &PutValueOK{}
}

/*PutValueOK handles this case with default header values.

OK
*/
type PutValueOK struct {
}

func (o *PutValueOK) Error() string {
	return fmt.Sprintf("[PUT /kv/{key}][%d] putValueOK ", 200)
}

func (o *PutValueOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutValueInternalServerError creates a PutValueInternalServerError with default headers values
func NewPutValueInternalServerError() *PutValueInternalServerError {
	return &PutValueInternalServerError{}
}

/*PutValueInternalServerError handles this case with default header values.

error
*/
type PutValueInternalServerError struct {
	Payload *models.Error
}

func (o *PutValueInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /kv/{key}][%d] putValueInternalServerError  %+v", 500, o.Payload)
}

func (o *PutValueInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
