package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// StatPathReader is a Reader for the StatPath structure.
type StatPathReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StatPathReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewStatPathOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewStatPathNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewStatPathUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewStatPathInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewStatPathDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewStatPathOK creates a StatPathOK with default headers values
func NewStatPathOK() *StatPathOK {
	return &StatPathOK{}
}

/*StatPathOK handles this case with default header values.

OK
*/
type StatPathOK struct {
	LinkTarget string

	ModTime string

	Mode uint32

	Name string

	Size int64
}

func (o *StatPathOK) Error() string {
	return fmt.Sprintf("[HEAD /archive][%d] statPathOK ", 200)
}

func (o *StatPathOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header linkTarget
	o.LinkTarget = response.GetHeader("linkTarget")

	// response header modTime
	o.ModTime = response.GetHeader("modTime")

	// response header mode
	mode, err := swag.ConvertUint32(response.GetHeader("mode"))
	if err != nil {
		return errors.InvalidType("mode", "header", "uint32", response.GetHeader("mode"))
	}
	o.Mode = mode

	// response header name
	o.Name = response.GetHeader("name")

	// response header size
	size, err := swag.ConvertInt64(response.GetHeader("size"))
	if err != nil {
		return errors.InvalidType("size", "header", "int64", response.GetHeader("size"))
	}
	o.Size = size

	return nil
}

// NewStatPathNotFound creates a StatPathNotFound with default headers values
func NewStatPathNotFound() *StatPathNotFound {
	return &StatPathNotFound{}
}

/*StatPathNotFound handles this case with default header values.

Supplied target not found
*/
type StatPathNotFound struct {
}

func (o *StatPathNotFound) Error() string {
	return fmt.Sprintf("[HEAD /archive][%d] statPathNotFound ", 404)
}

func (o *StatPathNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStatPathUnprocessableEntity creates a StatPathUnprocessableEntity with default headers values
func NewStatPathUnprocessableEntity() *StatPathUnprocessableEntity {
	return &StatPathUnprocessableEntity{}
}

/*StatPathUnprocessableEntity handles this case with default header values.

Format error in supplied filter or archive
*/
type StatPathUnprocessableEntity struct {
}

func (o *StatPathUnprocessableEntity) Error() string {
	return fmt.Sprintf("[HEAD /archive][%d] statPathUnprocessableEntity ", 422)
}

func (o *StatPathUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStatPathInternalServerError creates a StatPathInternalServerError with default headers values
func NewStatPathInternalServerError() *StatPathInternalServerError {
	return &StatPathInternalServerError{}
}

/*StatPathInternalServerError handles this case with default header values.

failed to export tar archive from target
*/
type StatPathInternalServerError struct {
}

func (o *StatPathInternalServerError) Error() string {
	return fmt.Sprintf("[HEAD /archive][%d] statPathInternalServerError ", 500)
}

func (o *StatPathInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStatPathDefault creates a StatPathDefault with default headers values
func NewStatPathDefault(code int) *StatPathDefault {
	return &StatPathDefault{
		_statusCode: code,
	}
}

/*StatPathDefault handles this case with default header values.

error
*/
type StatPathDefault struct {
	_statusCode int
}

// Code gets the status code for the stat path default response
func (o *StatPathDefault) Code() int {
	return o._statusCode
}

func (o *StatPathDefault) Error() string {
	return fmt.Sprintf("[HEAD /archive][%d] StatPath default ", o._statusCode)
}

func (o *StatPathDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
