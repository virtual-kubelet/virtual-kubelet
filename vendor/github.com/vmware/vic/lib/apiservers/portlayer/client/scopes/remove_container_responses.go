package scopes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/vmware/vic/lib/apiservers/portlayer/models"
)

// RemoveContainerReader is a Reader for the RemoveContainer structure.
type RemoveContainerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RemoveContainerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewRemoveContainerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewRemoveContainerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewRemoveContainerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRemoveContainerOK creates a RemoveContainerOK with default headers values
func NewRemoveContainerOK() *RemoveContainerOK {
	return &RemoveContainerOK{}
}

/*RemoveContainerOK handles this case with default header values.

OK
*/
type RemoveContainerOK struct {
	Payload string
}

func (o *RemoveContainerOK) Error() string {
	return fmt.Sprintf("[DELETE /scopes/{scope}/containers/{handle}][%d] removeContainerOK  %+v", 200, o.Payload)
}

func (o *RemoveContainerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveContainerNotFound creates a RemoveContainerNotFound with default headers values
func NewRemoveContainerNotFound() *RemoveContainerNotFound {
	return &RemoveContainerNotFound{}
}

/*RemoveContainerNotFound handles this case with default header values.

Not found
*/
type RemoveContainerNotFound struct {
	Payload *models.Error
}

func (o *RemoveContainerNotFound) Error() string {
	return fmt.Sprintf("[DELETE /scopes/{scope}/containers/{handle}][%d] removeContainerNotFound  %+v", 404, o.Payload)
}

func (o *RemoveContainerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveContainerInternalServerError creates a RemoveContainerInternalServerError with default headers values
func NewRemoveContainerInternalServerError() *RemoveContainerInternalServerError {
	return &RemoveContainerInternalServerError{}
}

/*RemoveContainerInternalServerError handles this case with default header values.

error
*/
type RemoveContainerInternalServerError struct {
	Payload *models.Error
}

func (o *RemoveContainerInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /scopes/{scope}/containers/{handle}][%d] removeContainerInternalServerError  %+v", 500, o.Payload)
}

func (o *RemoveContainerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
